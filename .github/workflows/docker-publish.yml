name: Docker publish

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
#  schedule:
#    - cron: '0 0 * * *'
  workflow_dispatch:
  push:
    branches: [ "main" ]
#    # Publish semver tags as releases.
#    tags: [ 'v*.*.*' ]
#  pull_request:
#    branches: [ "main" ]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}


jobs:
  # test:
  #   name: Run Pest tests
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v4

  #     - name: Set up PHP
  #       uses: shivammathur/setup-php@v2
  #       with:
  #         php-version: '8.4'
  #         coverage: none

  #     - name: Cache Composer dependencies
  #       uses: actions/cache@v4
  #       with:
  #         path: vendor
  #         key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
  #         restore-keys: |
  #           ${{ runner.os }}-composer-

  #     - name: Install Composer dependencies
  #       working-directory: tests
  #       run: composer install --no-interaction --prefer-dist

  #     - name: Run Pest tests
  #       working-directory: tests
  #       run: vendor/bin/pest ExampleTest.php
  build:
    name: Build and publish Docker image
  #  needs: test # On ne build que si les tests passent
    
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Set up BuildKit Docker container builder to be able to build
      # multi-platform images and export cache
      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # Étape de signature désactivée par défaut, à activer si besoin  
      # Install the cosign tool except on PR
      # https://github.com/sigstore/cosign-installer
      #- name: Install cosign
      #  if: github.event_name != 'pull_request'
      #  uses: sigstore/cosign-installer@6e04d228eb30da1757ee4e1dd75a0ec73a653e06 #v3.1.1
      #  with:
      #    cosign-release: 'v2.1.1'

      # Sign the resulting Docker image digest except on PRs.
      # This will only write to the public Rekor transparency log when the Docker
      # repository is public to avoid leaking data.  If you would like to publish
      # transparency data even for private images, pass --force to cosign below.
      # https://github.com/sigstore/cosign
      #- name: Sign the published Docker image
      #  if: ${{ github.event_name != 'pull_request' }}
      #  env:
      #    # https://docs.github.com/en/actions/security-guides/security-hardening-for-github-actions#using-an-intermediate-environment-variable
      #    TAGS: ${{ steps.meta.outputs.tags }}
      #    DIGEST: ${{ steps.build-and-push.outputs.digest }}
      #  # This step uses the identity token to provision an ephemeral certificate
      #  # against the sigstore community Fulcio instance.
      #  run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}
